{% assign selected_variant = product.selected_or_first_available_variant %}

<style>

.price-container {
  display: flex;
  align-items: center;
  gap: 10px;
}

.sale-label {
  background-color: #e53e3e;
  color: white;
  padding: 2px 6px;
  font-size: 0.75rem;
  font-weight: bold;
  border-radius: 4px;
}

.original-price {
  text-decoration: line-through;
  color: #718096;
  font-size: 0.875rem;
}

.current-price {
  font-weight: bold;
  font-size: 1.25rem;
}
   .zoom-container {
    position: relative;
    overflow: hidden;
    /* Establecemos un aspect ratio fijo */
    aspect-ratio: 1 / 1;
    max-height: 600px; /* Ajusta este valor seg√∫n tus necesidades */
  }
  .main-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  .main-image.active {
    opacity: 1;
  }

  .main-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .zoom-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 1000;
  }
  .zoomed-image {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 90%;
    max-height: 90%;
  }
  .zoom-button {
    position: absolute;
    bottom: 10px;
    right: 10px;
    background-color: rgba(255, 255, 255, 0.8);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
  }
  .zoom-button:hover {
    background-color: rgba(255, 255, 255, 1);
  }
  .close-button {
    position: absolute;
    top: 20px;
    right: 20px;
    background-color: rgba(255, 255, 255, 0.8);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 1001;
  }
  .close-button:hover {
    background-color: rgba(255, 255, 255, 1);
  }
</style>

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <div class="lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start">
    <!-- Image gallery -->
    <div class="flex flex-col">
      <!-- Main image -->
      <div class="w-full mb-4 zoom-container relative">
        {% if selected_variant.compare_at_price > selected_variant.price %}
          <span class="sale-label">Sale</span>
        {% endif %}
        <div id="main-image" class="main-image active">
          {{ product.featured_media | img_url: '800x800', crop: 'center' | img_tag: product.featured_media.alt, 'w-full h-full object-contain rounded-lg' }}
        </div>
        <button class="zoom-button" id="zoom-button">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7" />
          </svg>
        </button>
      </div>
      
      <!-- Image selector -->
      <div class="mt-4 grid grid-cols-4 gap-4">
        {% for media in product.media %}
          <button 
            class="thumbnail relative w-full h-24 bg-white rounded-md flex items-center justify-center text-sm font-medium uppercase text-gray-900 cursor-pointer hover:bg-gray-50 focus:outline-none focus:ring focus:ring-offset-4 focus:ring-opacity-50 {% if forloop.first %}ring-2 ring-indigo-500{% endif %}"
            data-image-id="{{ media.id }}"
            data-image-url="{{ media | img_url: '800x800', crop: 'center' }}"
            data-image-alt="{{ media.alt | escape }}"
          >
            <span class="sr-only">{{ media.alt }}</span>
            <span class="absolute inset-0 rounded-md overflow-hidden">
              {{ media | img_url: '200x200', crop: 'center' | img_tag: media.alt, 'w-full h-full object-cover' }}
            </span>
          </button>
        {% endfor %}
      </div>
    </div>

    <!-- Product info -->
    <div class="mt-10 px-4 sm:px-0 sm:mt-16 lg:mt-0">
      <h1 class="text-3xl font-extrabold tracking-tight text-gray-900">{{ product.title }}</h1>

      <div class="mt-3">
        <h2 class="sr-only">Product information</h2>
        <div class="price-container">
          <span class="current-price">{{ selected_variant.price | money_without_trailing_zeros }}</span>
          {% if selected_variant.compare_at_price > selected_variant.price %}
            <span class="original-price">{{ selected_variant.compare_at_price | money_without_trailing_zeros }}</span>
            <span class="sale-label">Sale</span>
          {% endif %}
        </div>
      </div>
      <!-- Short description -->
      <div class="mt-6">
        <h3 class="sr-only">Description</h3>
        <div class="text-base text-gray-700">
          {{ product.metafields.custom.short_description }}
        </div>
      </div>

      <form class="mt-6" action="/cart/add" method="POST">
        <!-- Variant selector -->
        {% unless product.has_only_default_variant %}
          {% for option in product.options_with_values %}
            <div class="mt-6">
              <label for="option-{{ forloop.index }}" class="block text-sm font-medium text-gray-700">
                {{ option.name }}
              </label>
              <select id="option-{{ forloop.index }}" name="options[{{ option.name | escape }}]" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
                {% for value in option.values %}
                  <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>
                    {{ value }}
                  </option>
                {% endfor %}
              </select>
            </div>
          {% endfor %}
        {% endunless %}

        <!-- Quantity selector -->
        <div class="mt-6">
          <label for="quantity" class="block text-sm font-medium text-gray-700">Quantity</label>
          <input type="number" name="quantity" id="quantity" min="1" value="1" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
        </div>

        <input type="hidden" name="id" value="{{ selected_variant.id }}">

        <button type="submit" class="mt-6 w-full bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Add to cart
        </button>
      </form>

      <!-- Full description -->
      <div class="mt-10">
        <h2 class="text-sm font-medium text-gray-900">Details</h2>
        <div class="mt-4 prose prose-sm text-gray-500">
          {{ product.description }}
        </div>
      </div>
    </div>
  </div>
</div>

<div id="zoom-overlay" class="zoom-overlay">
  <button id="close-zoom" class="close-button">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
    </svg>
  </button>
  <img id="zoomed-image" class="zoomed-image" src="" alt="">
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mainImageContainer = document.getElementById('main-image');
    const thumbnails = document.querySelectorAll('.thumbnail');
    const zoomButton = document.getElementById('zoom-button');
    const zoomOverlay = document.getElementById('zoom-overlay');
    const zoomedImage = document.getElementById('zoomed-image');
    const closeZoomButton = document.getElementById('close-zoom');

    function updateMainImage(imageUrl, imageAlt) {
      const newImage = document.createElement('div');
      newImage.className = 'main-image';
      newImage.innerHTML = `<img src="${imageUrl}" alt="${imageAlt}" class="w-full h-full object-contain rounded-lg">`;
      
      mainImageContainer.appendChild(newImage);
      
      setTimeout(() => {
        newImage.classList.add('active');
        mainImageContainer.querySelector('.main-image.active:not(:last-child)').classList.remove('active');
      }, 50);

      setTimeout(() => {
        while (mainImageContainer.children.length > 1) {
          mainImageContainer.removeChild(mainImageContainer.firstChild);
        }
      }, 350);
    }

    function setActiveThumbnail(thumbnail) {
      thumbnails.forEach(t => t.classList.remove('ring-2', 'ring-indigo-500'));
      thumbnail.classList.add('ring-2', 'ring-indigo-500');
    }

    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        const imageUrl = this.getAttribute('data-image-url');
        const imageAlt = this.getAttribute('data-image-alt');
        
        updateMainImage(imageUrl, imageAlt);
        setActiveThumbnail(this);
      });
    });

    // Zoom functionality
    function openZoom() {
      const currentImage = mainImageContainer.querySelector('.main-image.active img');
      zoomedImage.src = currentImage.src;
      zoomedImage.alt = currentImage.alt;
      zoomOverlay.style.display = 'block';
    }

    function closeZoom() {
      zoomOverlay.style.display = 'none';
    }

    zoomButton.addEventListener('click', openZoom);
    closeZoomButton.addEventListener('click', closeZoom);
    zoomOverlay.addEventListener('click', function(event) {
      if (event.target === zoomOverlay) {
        closeZoom();
      }
    });
  });
</script>